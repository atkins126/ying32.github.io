* `ShowMessage`  
显示一个消息框
```go
vcl.ShowMessage("消息")
```
---
* `MessageDlg`  
显示一个消息框，消息框，Buttons为按钮样式，祥见types.TMsgDlgButtons
```go
if vcl.MessageDlg("是否退出?", types.MtInformation, types.MbYes, types.MbNo) == types.MrYes {
   //
}
 
vcl.MessageDlg("是否退出?", types.MtInformation, types.MbYes, types.MbNo)
```

---
* `SelectDirectory1`  
选择目录，弹出一个选择目录对话框，老版本样式
```go
if ok, dir := vcl.SelectDirectory1(0); ok {
    fmt.Println("选择的目录为：", dir)
} 
```

---
* `SelectDirectory2`  
选择目录，弹出一个选择目录对话框，新版本样式
```go
options := types.TSelectDirExtOpts(rtl.Include(0, types.SdNewFolder, types.SdShowEdit, types.SdNewUI))
if ok, dir := vcl.SelectDirectory2("标题了", "C:/", options, nil); ok {
    fmt.Println("选择的目录为：", dir)
}
```

---
* `ThreadSync`  
切换至主线程中运行指定代码，主要用于协程中UI的访问
```go
 vcl.ThreadSync(func(){
     fmt.Println("这里的代码将会在主线程中运行")
 })
```

---
* `InputBox`  
输入对话框，参考例程sysdialog

---
* `InputQuery`  
输入对话框，参考例程sysdialog

```